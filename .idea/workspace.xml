<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="a435b798-879e-4571-b506-4fdfa557eb85" name="Default Changelist" comment="playing">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/deps.edn" beforeDir="false" afterPath="$PROJECT_DIR$/deps.edn" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/me/grison/raytraclj/hitable.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/me/grison/raytraclj/hitable.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/me/grison/raytraclj/image.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/me/grison/raytraclj/image.clj" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/me/grison/raytraclj/vec.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/me/grison/raytraclj/vec.clj" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CodeStyleSettingsInfer">
    <option name="done" value="true" />
  </component>
  <component name="DepsProjectDetails">
    <option name="cachedModuleDetails">
      <map>
        <entry key="$PROJECT_DIR$/deps.edn">
          <value>
            <ModuleDetails>
              <option name="details" value="{:paths [&quot;src&quot; &quot;resources&quot;], :deps {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;}, nrepl/nrepl {:mvn/version &quot;0.5.3&quot;}, com.twelvemonkeys.imageio/imageio-pnm {:mvn/version &quot;3.5&quot;}, com.twelvemonkeys.imageio/imageio-jpeg {:mvn/version &quot;3.5&quot;}, com.aparapi/aparapi {:mvn/version &quot;2.0.0&quot;}, me.grison.raytraclj/my-kernel {:mvn/version &quot;1.0-SNAPSHOT&quot;}}, :aliases {:deps {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version &quot;0.8.599&quot;}}}, :test {:extra-paths [&quot;test&quot;], :extra-deps {org.clojure/test.check {:mvn/version &quot;1.0.0&quot;}}}, :runner {:extra-deps {com.cognitect/test-runner {:git/url &quot;https://github.com/cognitect-labs/test-runner&quot;, :sha &quot;f7ef16dc3b8332b0d77bc0274578ad5270fbfedd&quot;}}, :main-opts [&quot;-m&quot; &quot;cognitect.test-runner&quot; &quot;-d&quot; &quot;test&quot;]}, :jar {:extra-deps {seancorfield/depstar {:mvn/version &quot;1.0.94&quot;}}, :main-opts [&quot;-m&quot; &quot;hf.depstar.jar&quot; &quot;raytraclj.jar&quot;]}, :install {:extra-deps {deps-deploy/deps-deploy {:mvn/version &quot;0.0.9&quot;}}, :main-opts [&quot;-m&quot; &quot;deps-deploy.deps-deploy&quot; &quot;install&quot; &quot;raytraclj.jar&quot;]}, :deploy {:extra-deps {deps-deploy/deps-deploy {:mvn/version &quot;0.0.9&quot;}}, :main-opts [&quot;-m&quot; &quot;deps-deploy.deps-deploy&quot; &quot;deploy&quot; &quot;raytraclj.jar&quot;]}, :native-image {:main-opts [&quot;-m clj.native-image me.grison.raytraclj.core&quot; &quot;--initialize-at-build-time&quot; &quot;-H:Name=core&quot;], :jvm-opts [&quot;-Dclojure.compiler.direct-linking=true&quot;], :extra-deps {clj.native-image/clj.native-image {:git/url &quot;https://github.com/taylorwood/clj.native-image.git&quot;, :sha &quot;7708e7fd4572459c81f6a6b8e44c96f41cdd92d4&quot;}}}}, :mvn/repos {&quot;central&quot; {:url &quot;https://repo1.maven.org/maven2/&quot;}, &quot;clojars&quot; {:url &quot;https://repo.clojars.org/&quot;}}, :system-aliases #{:test :deps}, :deps-tree {org.clojure/clojure {:mvn/version &quot;1.10.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\clojure\\clojure\\1.10.1\\clojure-1.10.1.jar&quot;], :children (org.clojure/core.specs.alpha org.clojure/spec.alpha)}, com.twelvemonkeys.imageio/imageio-metadata {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\imageio\\imageio-metadata\\3.5\\imageio-metadata-3.5.jar&quot;], :dependents [com.twelvemonkeys.imageio/imageio-jpeg], :children ()}, org.clojure/core.specs.alpha {:mvn/version &quot;0.2.44&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\clojure\\core.specs.alpha\\0.2.44\\core.specs.alpha-0.2.44.jar&quot;], :dependents [org.clojure/clojure], :children ()}, org.scala-lang/scala-library {:mvn/version &quot;2.13.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\scala-lang\\scala-library\\2.13.1\\scala-library-2.13.1.jar&quot;], :dependents [com.aparapi/aparapi], :children ()}, org.clojure/spec.alpha {:mvn/version &quot;0.2.176&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\clojure\\spec.alpha\\0.2.176\\spec.alpha-0.2.176.jar&quot;], :dependents [org.clojure/clojure], :children ()}, me.grison.raytraclj/my-kernel {:mvn/version &quot;1.0-SNAPSHOT&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\me\\grison\\raytraclj\\my-kernel\\1.0-SNAPSHOT\\my-kernel-1.0-SNAPSHOT.jar&quot;], :children ()}, com.aparapi/aparapi {:mvn/version &quot;2.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\aparapi\\aparapi\\2.0.0\\aparapi-2.0.0.jar&quot;], :children (org.scala-lang/scala-library org.apache.bcel/bcel com.aparapi/aparapi-jni)}, com.twelvemonkeys.imageio/imageio-pnm {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\imageio\\imageio-pnm\\3.5\\imageio-pnm-3.5.jar&quot;], :children (com.twelvemonkeys.imageio/imageio-core com.twelvemonkeys.common/common-io com.twelvemonkeys.common/common-image com.twelvemonkeys.common/common-lang)}, com.twelvemonkeys.imageio/imageio-core {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\imageio\\imageio-core\\3.5\\imageio-core-3.5.jar&quot;], :dependents [com.twelvemonkeys.imageio/imageio-pnm], :children ()}, org.apache.bcel/bcel {:mvn/version &quot;6.4.1&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\apache\\bcel\\bcel\\6.4.1\\bcel-6.4.1.jar&quot;], :dependents [com.aparapi/aparapi], :children ()}, com.twelvemonkeys.imageio/imageio-jpeg {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\imageio\\imageio-jpeg\\3.5\\imageio-jpeg-3.5.jar&quot;], :children (com.twelvemonkeys.imageio/imageio-metadata)}, com.aparapi/aparapi-jni {:mvn/version &quot;1.4.2&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\aparapi\\aparapi-jni\\1.4.2\\aparapi-jni-1.4.2.jar&quot;], :dependents [com.aparapi/aparapi], :children ()}, nrepl/nrepl {:mvn/version &quot;0.5.3&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\nrepl\\nrepl\\0.5.3\\nrepl-0.5.3.jar&quot;], :children (nrepl/bencode)}, org.clojure/test.check {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\org\\clojure\\test.check\\1.0.0\\test.check-1.0.0.jar&quot;], :children ()}, com.twelvemonkeys.common/common-io {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\common\\common-io\\3.5\\common-io-3.5.jar&quot;], :dependents [com.twelvemonkeys.imageio/imageio-pnm], :children ()}, com.twelvemonkeys.common/common-image {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\common\\common-image\\3.5\\common-image-3.5.jar&quot;], :dependents [com.twelvemonkeys.imageio/imageio-pnm], :children ()}, nrepl/bencode {:mvn/version &quot;1.0.0&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\nrepl\\bencode\\1.0.0\\bencode-1.0.0.jar&quot;], :dependents [nrepl/nrepl], :children ()}, com.twelvemonkeys.common/common-lang {:mvn/version &quot;3.5&quot;, :deps/manifest :mvn, :paths [&quot;C:\\Users\\Alex\\.m2\\repository\\com\\twelvemonkeys\\common\\common-lang\\3.5\\common-lang-3.5.jar&quot;], :dependents [com.twelvemonkeys.imageio/imageio-pnm], :children ()}}, :test-paths [&quot;test&quot;]}" />
              <option name="hash" value="64c718252d6af884bb5942e54a9c1699" />
            </ModuleDetails>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="multi-threaded" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectCodeStyleSettingsMigration">
    <option name="version" value="1" />
  </component>
  <component name="ProjectId" id="1aU9K7wMRBzxEQtlPr4SUQs3lBZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showExcludedFiles" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="cursive.last.file.extension.C\:/dev/github/raytraclj/src" value="clj" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/images" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\dev\github\raytraclj\images" />
    </key>
  </component>
  <component name="ReplState" timestamp="1587409386989">{:repl-history {:ide [], :local [{:command &quot;(import '(com.aparapi.Kernel))&quot;, :offset 30, :ns &quot;user&quot;} {:command &quot;(import [com.aparapi.Kernel])&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;(let [in-a (random-array 100)\n        in-b (random-array 100)\n        result (make-array Float/TYPE)\n        kernel (reify Kernel\n                 (run [] (let [i (.getGlobalId this)]\n                           (aset result i (+ (aget a i) (aget b i))))))\n        range (Range/create 100)]\n    (.execute kernel range))&quot;, :offset 318, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 100)\n        in-b (random-array 100)\n        result (make-array Float/TYPE)\n        kernel (extend Kernel\n                 (run [] (let [i (.getGlobalId this)]\n                           (aset result i (+ (aget a i) (aget b i))))))\n        range (Range/create 100)]\n    (.execute kernel range))&quot;, :offset 319, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(defn random-array [s]\n  (let [x (take s (random-sample 0.5 (repeat (rand))))]\n    (float-array x)))&quot;, :offset 100, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 100)\n        in-b (random-array 100)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 100)]\n    (.execute kernel range))&quot;, :offset 161, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 100)\n        in-b (random-array 100)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 100)]\n    (.execute kernel range)\n    (into [] (.result kernel)))&quot;, :offset 192, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 100)\n        in-b (random-list 100)\n        result (time (map + in-a in-b))]\n    \&quot;Done\&quot;)&quot;, :offset 112, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 100)\n        in-b (random-array 100)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 100)\n        _ (time (.execute kernel range))]\n    \&quot;Done\&quot;)&quot;, :offset 185, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 1000000)\n        in-b (random-list 1000000)\n        result (time (map + in-a in-b))]\n    \&quot;Done\&quot;)&quot;, :offset 120, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 1000000)\n        in-b (random-list 1000000)\n        result (time (vector (map + in-a in-b)))]\n    \&quot;Done\&quot;)&quot;, :offset 129, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 1000)\n        in-b (random-list 1000)\n        result (time (doall (map + in-a in-b)))]\n    \&quot;Done\&quot;)&quot;, :offset 122, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 1000)\n        in-b (random-array 1000)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 1000)\n        _ (time (.execute kernel range))]\n    \&quot;Done\&quot;)&quot;, :offset 188, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 1000000)\n        in-b (random-list 1000000)\n        result (time (doall (map + in-a in-b)))]\n    \&quot;Done\&quot;)&quot;, :offset 128, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 1000000)\n        in-b (random-array 1000000)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 1000000)\n        _ (time (.execute kernel range))]\n    \&quot;Done\&quot;)&quot;, :offset 197, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 100000000)\n        in-b (random-array 100000000)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 100000000)\n        _ (time (.execute kernel range))]\n    \&quot;Done with GPU\&quot;)&quot;, :offset 212, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-array 10000000)\n        in-b (random-array 10000000)\n        _ (println \&quot;Done creating samples\&quot;)\n        kernel (MyKernel. in-a in-b)\n        range (Range/create 10000000)\n        _ (println \&quot;Done creating Kernel\&quot;)\n        _ (time (.execute kernel range))]\n    \&quot;Done with GPU\&quot;)&quot;, :offset 296, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(let [in-a (random-list 10000000)\n        in-b (random-list 10000000)\n        _ (println \&quot;Done creating samples\&quot;)\n        result (time (doall (pmap + in-a in-b)))]\n    \&quot;Done with CPU parallelized\&quot;)&quot;, :offset 197, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(Device/getAll)&quot;, :offset 15, :ns &quot;user&quot;} {:command &quot;(Device.)&quot;, :offset 9, :ns &quot;user&quot;} {:command &quot;(Device/best)&quot;, :offset 13, :ns &quot;user&quot;} {:command &quot;(Device/bestACC)&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(Device/bestGPU)&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(Device/firstCPU)&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(Device/firstGPU)&quot;, :offset 17, :ns &quot;user&quot;} {:command &quot;(Device/first com.aparapi.device.Device.TYPE/CPU)&quot;, :offset 49, :ns &quot;user&quot;} {:command &quot;(import com.aparapi.device.Device.TYPE)&quot;, :offset 39, :ns &quot;user&quot;} {:command &quot;(import com.aparapi.device.Device/TYPE)&quot;, :offset 39, :ns &quot;user&quot;} {:command &quot;(import com.aparapi.device.Device$TYPE)&quot;, :offset 39, :ns &quot;user&quot;} {:command &quot;(NativeLoader/load)&quot;, :offset 19, :ns &quot;user&quot;} {:command &quot;(Device/first Device$TYPE/CPU)&quot;, :offset 30, :ns &quot;user&quot;} {:command &quot;(Device/first Device$TYPE/GPU)&quot;, :offset 30, :ns &quot;user&quot;} {:command &quot;(time (final-scene 128 80 10 \&quot;/mnt/c/temp/final-ir-4.png\&quot;))&quot;, :offset 59, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(def grouped-thousands [34 758])\n(def qualifiers [\&quot;thousand\&quot; \&quot;million\&quot; \&quot;billion\&quot; \&quot;trillion\&quot;])&quot;, :offset 93, :ns &quot;user&quot;} {:command &quot;(def grouped-thousands [12 34 758])\n(def qualifiers [\&quot;thousand\&quot; \&quot;million\&quot; \&quot;billion\&quot; \&quot;trillion\&quot;])&quot;, :offset 96, :ns &quot;user&quot;} {:command &quot;(butlast (interleave grouped-thousands qualifiers))&quot;, :offset 51, :ns &quot;user&quot;} {:command &quot;(butlast (interleave grouped-thousands (reverse qualifiers)))&quot;, :offset 61, :ns &quot;user&quot;} {:command &quot;(butlast (interleave (reverse grouped-thousands) qualifiers))&quot;, :offset 61, :ns &quot;user&quot;} {:command &quot;(reverse (butlast (interleave (reverse grouped-thousands) qualifiers)))&quot;, :offset 71, :ns &quot;user&quot;} {:command &quot;(-&gt; grouped-thousands\n    reverse\n    (interleave qualifiers)\n    butlast\n    reverse)\n&quot;, :offset 86, :ns &quot;user&quot;} {:command &quot;(-&gt; [758]\n    reverse\n    (interleave qualifiers)\n    butlast\n    reverse)\n&quot;, :offset 74, :ns &quot;user&quot;} {:command &quot;(-&gt; [34 758]\n    reverse\n    (interleave qualifiers)\n    butlast\n    reverse)\n&quot;, :offset 78, :ns &quot;user&quot;} {:command &quot;(-&gt; [7 34 758]\n    reverse\n    (interleave qualifiers)\n    butlast\n    reverse)\n&quot;, :offset 79, :ns &quot;user&quot;} {:command &quot;(-&gt; [11 7 34 758]\n    reverse\n    (interleave qualifiers)\n    butlast\n    reverse)\n&quot;, :offset 82, :ns &quot;user&quot;} {:command &quot;(defn say-big-number\n  [num]\n  (let [words (-&gt;&gt; num\n                   grouped-thousands\n                   (map say-hundreds))\n        interwoven (interleave words thousands-qualifiers)\n        to-english (-&gt;&gt; interwoven\n                        butlast\n                        reverse\n                        (join \&quot; \&quot;))]\n    to-english))&quot;, :offset 339, :ns &quot;user&quot;}], :remote [{:command &quot;(defn final-scene []\n  (let [t1 (System/currentTimeMillis)\n        nx (* 120 3) ny (* 80 3) ns 10\n        look-from [13 2 3]\n        look-at [0 0 0]\n        dist-to-focus 10\n        aperture 0.1\n        cam (camera/make look-from look-at [0 1 0] 20 (/ (float nx) (float ny)) aperture dist-to-focus)\n        world (make-world)\n        all-pixels (into [] (for [j (range (dec ny) -1 -1)\n                                  i (range 0 nx)]\n                              {:i i :j j}))]\n    (println \&quot;Starting raytracing for \&quot; (count all-pixels) \&quot; pixels...\&quot;)\n    (raytrace-direct nx ny\n                     (pmap #(single-px world cam nx ny ns (:i %) (:j %)) all-pixels)\n                     \&quot;/mnt/c/temp/final-ir-lolilolol.png\&quot;)))&quot;, :offset 725, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(time (final-scene))&quot;, :offset 20, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(time (final-scene 128 80 100 \&quot;/mnt/c/temp/final-ir-9.png\&quot;))&quot;, :offset 60, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(time (final-scene 128 80 100 \&quot;/mnt/c/temp/final-ir-90.png\&quot;))&quot;, :offset 61, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;A&quot;, :offset 1, :ns &quot;me.grison.raytraclj.core&quot;} {:command &quot;(time (final-scene 128 80 10 \&quot;/mnt/c/temp/final-ir-90.png\&quot;))&quot;, :offset 60, :ns &quot;me.grison.raytraclj.core&quot;}]}}</component>
  <component name="RunManager" selected="Clojure REPL.Local">
    <configuration name="Local" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="raytraclj" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="INTELLIJ" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false" nameIsGenerated="true">
      <module name="raytraclj" />
      <setting name="host" value="localhost" />
      <setting name="port" value="61790" />
      <setting name="replType" value="NREPL" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="SOCKET" />
      <setting name="configType" value="SPECIFY" />
      <setting name="fixLineNumbers" value="false" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Clojure REPL.Local" />
      <item itemvalue="Clojure REPL.Unnamed" />
    </list>
  </component>
  <component name="ServiceViewManager">
    <option name="viewStates">
      <list>
        <serviceView>
          <treeState>
            <expand />
            <select />
          </treeState>
        </serviceView>
      </list>
    </option>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a435b798-879e-4571-b506-4fdfa557eb85" name="Default Changelist" comment="" />
      <created>1586779238599</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1586779238599</updated>
      <workItem from="1586779249661" duration="9353000" />
      <workItem from="1586929738847" duration="601000" />
      <workItem from="1586936366270" duration="24000" />
      <workItem from="1586939686544" duration="1528000" />
      <workItem from="1587042199298" duration="6000" />
      <workItem from="1587045912639" duration="115000" />
      <workItem from="1587046375122" duration="3427000" />
      <workItem from="1587404263967" duration="3576000" />
      <workItem from="1587663979213" duration="96000" />
    </task>
    <task id="LOCAL-00001" summary="playing">
      <created>1587405521882</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1587405521882</updated>
    </task>
    <task id="LOCAL-00002" summary="playing">
      <created>1587405924700</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1587405924700</updated>
    </task>
    <task id="LOCAL-00003" summary="playing">
      <created>1587405963693</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1587405963693</updated>
    </task>
    <option name="localTasksCounter" value="4" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="playing" />
    <option name="LAST_COMMIT_MESSAGE" value="playing" />
  </component>
  <component name="WindowStateProjectService">
    <state x="1226" y="541" key="#com.intellij.execution.impl.EditConfigurationsDialog" timestamp="1587404820575">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1226" y="541" key="#com.intellij.execution.impl.EditConfigurationsDialog/0.40.2560.1400@0.40.2560.1400" timestamp="1587404820575" />
    <state x="361" y="862" key="#com.intellij.ide.util.MemberChooser" timestamp="1586780508912">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="361" y="862" key="#com.intellij.ide.util.MemberChooser/0.40.2560.1400@0.40.2560.1400" timestamp="1586780508912" />
    <state x="1286" y="774" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog" timestamp="1586780881514">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1286" y="774" key="#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/0.40.2560.1400@0.40.2560.1400" timestamp="1586780881514" />
    <state x="1187" y="387" width="1159" height="937" key="CommitChangelistDialog2" timestamp="1587663997185">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1187" y="387" width="1159" height="937" key="CommitChangelistDialog2/0.40.2560.1400@0.40.2560.1400" timestamp="1587663997185" />
    <state x="637" y="477" width="1815" height="845" key="DiffContextDialog" timestamp="1587405369478">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="637" y="477" width="1815" height="845" key="DiffContextDialog/0.40.2560.1400@0.40.2560.1400" timestamp="1587405369478" />
    <state x="1325" y="659" key="FileChooserDialogImpl" timestamp="1587405337875">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1325" y="659" key="FileChooserDialogImpl/0.40.2560.1400@0.40.2560.1400" timestamp="1587405337875" />
    <state x="1067" y="648" key="Vcs.Push.Dialog.v2" timestamp="1587405964539">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1067" y="648" key="Vcs.Push.Dialog.v2/0.40.2560.1400@0.40.2560.1400" timestamp="1587405964539" />
    <state x="1124" y="527" width="588" height="488" key="find.popup" timestamp="1587664034926">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1124" y="527" width="588" height="488" key="find.popup/0.40.2560.1400@0.40.2560.1400" timestamp="1587664034926" />
    <state x="1006" y="728" key="new project wizard" timestamp="1586780763744">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1006" y="728" key="new project wizard/0.40.2560.1400@0.40.2560.1400" timestamp="1586780763744" />
    <state x="1239" y="761" width="687" height="678" key="search.everywhere.popup" timestamp="1586779332227">
      <screen x="0" y="40" width="2560" height="1400" />
    </state>
    <state x="1239" y="761" width="687" height="678" key="search.everywhere.popup/0.40.2560.1400@0.40.2560.1400" timestamp="1586779332227" />
  </component>
</project>